[user]
	name = Rafal
	email = kenorb@gmail.com
[merge]
  renamelimit =       7274
[alias]
  log-graph =       !git log --oneline --graph --decorate --all
  out =             !git log --boundary $(git rev-list --max-count=1 --simplify-by-decoration HEAD^)..
  sm-diff =         "submodule foreach 'git diff'"
  sm-clean-all =    "submodule foreach --recursive 'git clean -fXd'"
  pull-forks =      "!git submodule foreach 'git pull `git config --get remote.origin.url | sed s#EXAMPLE#kenorb#`&'"
  ; tag-svn2git =     !git for-each-ref refs/remotes/tags --shell --format="r=%(refname:short) t=\${r#tags/}" | while read e; do eval "$e"; git tag -f $t refs/remotes/$r; git branch -d -r $r; done
  ; branch-svn2git =  !git for-each-ref refs/remotes --shell --format="r=%(refname:short) t=\${r#tags/}" | while read e; do eval "$e"; git branch -f $t refs/remotes/$r; git branch -d -r $r; done
  addremove = !git add . && git ls-files -deleted | xargs git rm
  majonez = !echo Hellmanns
  svn-dcommit =     "!set -o xtrace; git stash; git svn dcommit; git stash pop -q"
[diff]
	tool = diffmerge
[mergetool]
	tool = diffmerge
[opendiff]
	tool = /usr/bin/opendiff
[difftool]
	prompt = NO
	external = /usr/bin/diffmerge
[difftool "diffmerge"] 
  cmd = /Applications/DiffMerge.app/Contents/MacOS/DiffMerge "$LOCAL" "$REMOTE" # For DiffMerge
	keepBackup = false
  trustExitCode = true
[difftool "bbdiff"] 
  cmd = /usr/local/bin/bbdiff --wait --resume "$LOCAL" "$REMOTE" # for BBEdit
[difftool "twdiff"] 
  cmd = /usr/bin/twdiff --wait --resume "$LOCAL" "$REMOTE" # for TextWrangler
[difftool "filemerge"] 
  cmd = /usr/bin/opendiff "$LOCAL" "$REMOTE" # for FileMerge

[push]
	default = matching

[gc]
	auto = 0

;[filter "rcs-keywords"]
;  clean=.git_filters/rcs-keywords.clean
;  smudge=.git_filters/rcs-keywords.smudge %f

; HOW TO
; How to change the author of past commits in git? See: http://stackoverflow.com/questions/750172/how-do-i-change-the-author-of-a-commit-in-git
;   git filter-branch -f --env-filter "GIT_AUTHOR_NAME='Newname'; GIT_AUTHOR_EMAIL='newemail'; GIT_COMMITTER_NAME='Oldname'; GIT_COMMITTER_EMAIL='oldemail';" HEAD
[core]
	filemode = false
  ; detect and raise errors about trailing spaces and spaces before tabs
  whitespace = trailing-space,space-before-tab
[apply]
  ; strip whitespaces, but only during patch, not "always automatically"
  whitespace = fix
